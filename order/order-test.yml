server:
  port: ${port} #服务端口

spring:
  application:
    name: spring-cloud-order  #指定服务名
  cloud:
    config:
      #不覆盖本地配置文件相关设置
      allow-override: true # 标识 overrideSystemProperties属性是否启用。默认为true，设置为false意为禁止用户的设置
      override-none: true # 外部的配置优先级更低，而且不能覆盖任何存在的属性源。默认为false
      override-system-properties: false #用来标识外部配置是否能够覆盖系统属性，默认为true。

eureka:
  client: #客户端信息
    #因为是客户端，默认可以不配，所以以下就注释掉了
    #register-with-eureka: true #是否将自己注册到eureka服务中,默认为true
    #fetch-registry: true #是否从eureka服务中拉取其它服务的信息 ,默认为true
    
    service-url: #Eureka客户端与Eureka服务端交互地址
       defaultZone: http://127.0.0.1:10087/eureka #将自己注册到Eureka集群上，注册中心的地址
       
  instance: #实例信息
    prefer-ip-address: true #当你获取host时，返回的是ip,而不是主机名
    ip-address: 127.0.0.1 # 指定自己的ip信息，不指定的话会自己寻找
    instance-id: ${spring.application.name}:${server.port} #指定实例Id，一个服务下面可以有多个实例，即eureka服务可以有集群
    lease-expiration-duration-in-seconds: 10 # 如果超过10秒没有发送心跳，EurekaServer就会认为该服务宕机，会从服务列表中移除,服务失效时间，默认值90秒
    lease-renewal-interval-in-seconds: 5 # 每5秒一次，向注册中心发送心跳，服务续约(renew)的间隔，默认为30秒
    
logging:
  level:
    org.springframework.web: DEBUG
    #root: info
  file: /log/log/order.log
ip: 172.0.03